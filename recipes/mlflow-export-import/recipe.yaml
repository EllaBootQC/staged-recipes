# This example shows how to define a recipe using the new YAML based recipe format introduced by 
# CEP 13.

# For more information about this format see: https://prefix-dev.github.io/rattler-build/latest/reference/recipe_file/

# The main differences with the old format is that no preprocessing is required for the file to be valid YAML.
# This means:
# - No "selectors", use YAML if-then-else expressions instead (https://prefix-dev.github.io/rattler-build/latest/selectors/)
# - Jinja expressions are formatted with a leading `$` to make them valid YAML

# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Define variables in this section that you can use in other parts.
context:
  name: mlflow-export-import
  version: "1.1.2"

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  url: https://github.com/mlflow/${{ name }}/archive/refs/tags/v${{ version}}.tar.gz
  sha256: 336bd0fe3a16ac2198774f89d2642df5d103d306a5a6d3b48f3eed90dbddf9c3

build:
  script: python -m pip install . -vv
  number: 0

requirements:
  build:
    - ${{ compiler('c') }}
    # - ${{ stdlib('c') }}  # If you need any compiler, add the C standard library ("stdlib") too
    - mlflow
    # - databricks_cli ==0.18.0
    - databricks-cli ==0.18.0
    - pandas >=1.5.2
    - tabulate ==0.9.0
    - wheel
    - pip
  host:
    - python
    - setuptools
  run:
    - python

# tests:
#   # - script: mlflow_export_import/tests/run_tests.sh
#   - script: mlflow_export_import/tests/open_source/run_tests.sh

# tests:
#   - script:
#     - if: unix or emscripten
#       then:
#         - test ${PREFIX}/
#         - test -d ${PREFIX}/include/xtensor
#         - test -f ${PREFIX}/include/xtensor/xarray.hpp
#         - test -f ${PREFIX}/share/cmake/xtensor/xtensorConfig.cmake
#         - test -f ${PREFIX}/share/cmake/xtensor/xtensorConfigVersion.cmake
#     - if: win
#       then:
#         - if not exist %LIBRARY_PREFIX%\include\xtensor\xarray.hpp (exit 1)
#         - if not exist %LIBRARY_PREFIX%\share\cmake\xtensor\xtensorConfig.cmake (exit 1)
#         - if not exist %LIBRARY_PREFIX%\share\cmake\xtensor\xtensorConfigVersion.cmake (exit 1)


tests:
  - script:
      - test ${PREFIX}/include/mlflow-export-import

# tests:
#   - script:
#       - mlflow-export-import --help

  # - scripts: mlflow_export_import

about:
  homepage:  https://github.com/mlflow/mlflow-export-import
  summary: 'Tools to copy MLflow objects'
  description: |
    The MLflow Export Import package provides tools to copy MLflow objects (runs, experiments or registered models) from one MLflow tracking server (Databricks workspace) to another. Using the MLflow REST API, the tools export MLflow objects to an intermediate directory and then import them into the target tracking server.
  license: Apache-2.0
  license_file: LICENSE.txt
  repository: https://github.com/mlflow/mlflow-export-import

extra:
  recipe-maintainers:
    - EllaBootQC
